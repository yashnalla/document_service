# Generated by Django 4.2.23 on 2025-08-03 23:37

from django.db import migrations, models
from django.contrib.postgres.search import SearchVector


def populate_search_vectors(apps, schema_editor):
    """Populate search_vector field for all existing documents."""
    Document = apps.get_model('documents', 'Document')
    
    # Update in batches to handle large datasets efficiently
    batch_size = 1000
    documents = Document.objects.all()
    total_count = documents.count()
    
    print(f"Updating search vectors for {total_count} documents...")
    
    for i in range(0, total_count, batch_size):
        batch = documents[i:i + batch_size]
        
        for document in batch:
            # Content is now plain text, no extraction needed
            content_text = document.content or ""
            
            # Update search vector
            Document.objects.filter(pk=document.pk).update(
                search_vector=(
                    SearchVector('title', weight='A') +
                    SearchVector('content', weight='B')
                )
            )
        
        print(f"Processed {min(i + batch_size, total_count)} / {total_count} documents")


# No extraction function needed - content is already plain text


def reverse_populate_search_vectors(apps, schema_editor):
    """Reverse migration - clear search vectors."""
    Document = apps.get_model('documents', 'Document')
    Document.objects.update(search_vector=None)


class Migration(migrations.Migration):
    dependencies = [
        ("documents", "0003_add_search_vector"),
    ]

    operations = [
        migrations.RunPython(
            populate_search_vectors,
            reverse_populate_search_vectors,
        ),
    ]
